-- Services
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local rootPart = nil

-- Konfigurasi
local TARGET_NAME = "AmberRock"
local MOVE_SPEED = 200
local MAX_DISTANCE = 1000
local ESP_COLOR = Color3.fromRGB(255, 170, 0)

local espEnabled = false
local autoCollectEnabled = false
local autoAmberEnabled = false
local collecting = false

-- GUI & ExtractBtn
local extractBtn = player:WaitForChild("PlayerGui"):WaitForChild("Main")
	:WaitForChild("Background")
	:WaitForChild("MovieEventBackground")
	:WaitForChild("IncubatorBackground")
	:WaitForChild("IncubationInteractionFrame")
	:WaitForChild("ExtractBtn")

local extractAmberEvent = game.Workspace:WaitForChild("GameEvents"):WaitForChild("MovieEvent2025"):WaitForChild("ExtractAmber")

-- GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AmberGUI"
gui.ResetOnSpawn = false

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 230, 0, 200)
mainFrame.Position = UDim2.new(0, 30, 0.5, -100)
mainFrame.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Selectable = true
mainFrame.Draggable = true
mainFrame.Parent = gui

-- Header
local header = Instance.new("TextLabel", mainFrame)
header.Size = UDim2.new(1, 0, 0, 30)
header.BackgroundTransparency = 1
header.Text = "Amber"
header.Font = Enum.Font.GothamBold
header.TextColor3 = Color3.new(1, 1, 1)
header.TextScaled = true

-- ESP Button
local espBtn = Instance.new("TextButton", mainFrame)
espBtn.Size = UDim2.new(1, -20, 0, 35)
espBtn.Position = UDim2.new(0, 10, 0, 40)
espBtn.Text = "‚òê ESP: OFF"
espBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
espBtn.TextColor3 = Color3.new(1, 1, 1)
espBtn.TextScaled = true
espBtn.Font = Enum.Font.GothamBold

-- AutoCollect Button
local autoBtn = Instance.new("TextButton", mainFrame)
autoBtn.Size = UDim2.new(1, -20, 0, 35)
autoBtn.Position = UDim2.new(0, 10, 0, 80)
autoBtn.Text = "‚öôÔ∏è AutoCollect: OFF"
autoBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
autoBtn.TextColor3 = Color3.new(1, 1, 1)
autoBtn.TextScaled = true
autoBtn.Font = Enum.Font.GothamBold

-- AutoExtractAmber Button
local amberBtn = Instance.new("TextButton", mainFrame)
amberBtn.Size = UDim2.new(1, -20, 0, 35)
amberBtn.Position = UDim2.new(0, 10, 0, 120)
amberBtn.Text = "üü† AutoExtractAmber: OFF"
amberBtn.BackgroundColor3 = Color3.fromRGB(100, 0, 0)
amberBtn.TextColor3 = Color3.new(1, 1, 1)
amberBtn.TextScaled = true
amberBtn.Font = Enum.Font.GothamBold

-- Toggle (Show/Hide) Button as ImageButton
local toggleBtn = Instance.new("ImageButton", gui)
toggleBtn.Size = UDim2.new(0, 50, 0, 50)
toggleBtn.Position = UDim2.new(0, 10, 1, -60)
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 0, 0)
toggleBtn.BorderSizePixel = 0
toggleBtn.Image = "rbxassetid://132405759636904"
toggleBtn.ImageColor3 = Color3.new(1, 1, 1)

-- Dragging for toggleBtn (mobile & PC)
local dragging = false
local dragStart, startPos

local function updateDrag(input)
	if not dragging then return end
	local delta = input.Position - dragStart
	toggleBtn.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end

toggleBtn.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = toggleBtn.Position
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
		updateDrag(input)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = false
	end
end)

-- Toggle functionality (show/hide)
local isHidden = false
toggleBtn.MouseButton1Click:Connect(function()
	isHidden = not isHidden
	mainFrame.Visible = not isHidden
end)

-- Button Toggles
espBtn.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	espBtn.Text = espEnabled and "üü© ESP: ON" or "‚òê ESP: OFF"
end)

autoBtn.MouseButton1Click:Connect(function()
	autoCollectEnabled = not autoCollectEnabled
	autoBtn.Text = autoCollectEnabled and "üü¢ AutoCollect: ON" or "‚öôÔ∏è AutoCollect: OFF"
end)

amberBtn.MouseButton1Click:Connect(function()
	autoAmberEnabled = not autoAmberEnabled
	amberBtn.Text = autoAmberEnabled and "üü† AutoExtractAmber: ON" or "üü† AutoExtractAmber: OFF"
end)

-- ESP Function
local function createESP(model)
	if model:FindFirstChild("ESPLabel") then return end
	local part = model:FindFirstChildWhichIsA("BasePart")
	if not part then return end

	local billboard = Instance.new("BillboardGui", model)
	billboard.Name = "ESPLabel"
	billboard.Size = UDim2.new(0, 100, 0, 30)
	billboard.Adornee = part
	billboard.AlwaysOnTop = true

	local label = Instance.new("TextLabel", billboard)
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = model.Name
	label.TextColor3 = ESP_COLOR
	label.TextScaled = true
end

-- Prompt Interact
local function interactWithPrompt(model)
	for _, d in pairs(model:GetDescendants()) do
		if d:IsA("ProximityPrompt") then
			pcall(function()
				fireproximityprompt(d)
			end)
			break
		end
	end
end

-- Tween Movement
local function moveTo(model)
	local part = model:FindFirstChildWhichIsA("BasePart")
	if not part then return false end

	local rayOrigin = part.Position + Vector3.new(0, 5, 0)
	local rayDirection = Vector3.new(0, -100, 0)
	local params = RaycastParams.new()
	params.FilterDescendantsInstances = {model}
	params.FilterType = Enum.RaycastFilterType.Blacklist

	local result = workspace:Raycast(rayOrigin, rayDirection, params)
	local targetPos = result and result.Position + Vector3.new(0, 3, 0) or part.Position + Vector3.new(0, 3, 0)

	local dist = (rootPart.Position - targetPos).Magnitude
	local time = dist / MOVE_SPEED

	local tween = TweenService:Create(rootPart, TweenInfo.new(time, Enum.EasingStyle.Linear), {
		CFrame = CFrame.new(targetPos)
	})

	tween:Play()
	tween.Completed:Wait()

	for i = 1, 20 do
		interactWithPrompt(model)
		task.wait(0.1)
		if not model:IsDescendantOf(workspace) then
			return true
		end
	end

	return false
end

-- Main Loop
task.spawn(function()
	while true do
		if not rootPart or not rootPart:IsDescendantOf(workspace) then
			local char = player.Character or player.CharacterAdded:Wait()
			rootPart = char:WaitForChild("HumanoidRootPart")
		end

		if espEnabled then
			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Model") and obj.Name == TARGET_NAME then
					createESP(obj)
				end
			end
		end

		if autoCollectEnabled and not collecting then
			collecting = true
			local targets = {}

			for _, obj in pairs(workspace:GetDescendants()) do
				if obj:IsA("Model") and obj.Name == TARGET_NAME then
					local part = obj:FindFirstChildWhichIsA("BasePart")
					if part then
						local dist = (rootPart.Position - part.Position).Magnitude
						if dist <= MAX_DISTANCE then
							table.insert(targets, {model = obj, distance = dist})
						end
					end
				end
			end

			table.sort(targets, function(a, b)
				return a.distance < b.distance
			end)

			for _, target in ipairs(targets) do
				if autoCollectEnabled and target.model and target.model.Parent then
					moveTo(target.model)
				end
			end

			collecting = false
		end

		if autoAmberEnabled and extractBtn and extractBtn.Visible then
			pcall(function()
				extractAmberEvent:FireServer()
			end)
		end

		task.wait(0.1)
	end
end)
